/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package alan.analizador.interfaz;

import alan.analizador.lexico.ALexico;
import alan.analizador.lexico.Categoria;
import alan.analizador.lexico.Token;
import alan.analizador.util.Util;

import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;
import java.io.*;
import java.time.Instant;
import java.time.format.DateTimeFormatter;
import java.util.*;
import java.util.stream.Collectors;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Alan
 */
public class Instrucciones extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    private DefaultTableModel modelTokens;
    private DefaultTableModel modelSimbols;
    

    public Instrucciones() {
        initComponents();
        initChanges();
    }
    
    private void initChanges(){
        //set umg icon.
        javax.swing.ImageIcon icon = new javax.swing.ImageIcon(getClass().getResource("/logo.png"));
        java.awt.Image img = icon.getImage().getScaledInstance(iconUmg.getWidth(), iconUmg.getHeight(), java.awt.Image.SCALE_SMOOTH);
        javax.swing.ImageIcon scaled = new javax.swing.ImageIcon(img);
        iconUmg.setIcon(scaled);
        
        //set table models
        String[] columns = {"Lexema", "Categoría", "Código"};
        modelTokens = new DefaultTableModel(columns, 3);
        tokenTable.setModel(modelTokens);
        //alan
        String[] columns2 = {"Identificador", "Rol", "Tamaño", "Posición"};
        modelSimbols = new DefaultTableModel(columns2, 4);
        simbolTable.setModel(modelSimbols);
        clearResults();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainScroll = new javax.swing.JScrollPane();
        mainPanel = new javax.swing.JPanel();
        infoPanel = new javax.swing.JPanel();
        subInfoPanel = new javax.swing.JPanel();
        iconUmg = new javax.swing.JLabel();
        subInfoPanel2 = new javax.swing.JPanel();
        course = new javax.swing.JLabel();
        name = new javax.swing.JLabel();
        spacePanel = new javax.swing.JPanel();
        resultsPanel = new javax.swing.JPanel();
        Entrada = new javax.swing.JPanel();
        Instrucciones = new javax.swing.JLabel();
        Datos = new javax.swing.JPanel();
        ApartadoCodigo = new javax.swing.JPanel();
        Codigo = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        codeTextArea = new javax.swing.JTextArea();
        Botones = new javax.swing.JPanel();
        analizarCodigo = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        cargarCodigo = new javax.swing.JButton();
        ApartadoErrores = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        errorTextArea = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Tablas = new javax.swing.JPanel();
        Instrucciones2 = new javax.swing.JLabel();
        Datos1 = new javax.swing.JPanel();
        ListaTokens = new javax.swing.JPanel();
        Codigo1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tokenTable = new javax.swing.JTable();
        Simbolos = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        simbolTable = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        appBarMenu = new javax.swing.JMenu();
        jmSalir = new javax.swing.JMenuItem();
        appBarInfo = new javax.swing.JMenu();
        jmInfoGeneral = new javax.swing.JMenuItem();
        jmSep = new javax.swing.JPopupMenu.Separator();
        jmInfoStud = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridLayout(1, 0, 0, 20));

        mainPanel.setLayout(new javax.swing.BoxLayout(mainPanel, javax.swing.BoxLayout.Y_AXIS));

        infoPanel.setLayout(new javax.swing.BoxLayout(infoPanel, javax.swing.BoxLayout.LINE_AXIS));

        subInfoPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEADING));

        iconUmg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logo.png"))); // NOI18N
        iconUmg.setMaximumSize(new java.awt.Dimension(200, 200));
        iconUmg.setMinimumSize(new java.awt.Dimension(200, 200));
        iconUmg.setPreferredSize(new java.awt.Dimension(150, 150));
        subInfoPanel.add(iconUmg);

        subInfoPanel2.setLayout(new javax.swing.BoxLayout(subInfoPanel2, javax.swing.BoxLayout.Y_AXIS));

        course.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        course.setText("Compiladores 2022");
        subInfoPanel2.add(course);

        name.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        name.setText("Alan David González López (4090-19-4713)");
        subInfoPanel2.add(name);

        subInfoPanel.add(subInfoPanel2);

        infoPanel.add(subInfoPanel);

        mainPanel.add(infoPanel);

        spacePanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 0, 10));
        mainPanel.add(spacePanel);

        resultsPanel.setLayout(new java.awt.GridLayout(1, 0, 40, 0));

        Entrada.setLayout(new java.awt.BorderLayout(0, 20));

        Instrucciones.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        Instrucciones.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Instrucciones.setText("Código:");
        Entrada.add(Instrucciones, java.awt.BorderLayout.PAGE_START);

        Datos.setLayout(new java.awt.GridLayout(2, 0, 0, 20));

        ApartadoCodigo.setLayout(new javax.swing.BoxLayout(ApartadoCodigo, javax.swing.BoxLayout.Y_AXIS));

        Codigo.setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.GridLayout(1, 0));

        codeTextArea.setColumns(20);
        codeTextArea.setRows(5);
        jScrollPane4.setViewportView(codeTextArea);

        jPanel1.add(jScrollPane4);

        Codigo.add(jPanel1, java.awt.BorderLayout.CENTER);

        ApartadoCodigo.add(Codigo);

        Botones.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEADING, 0, 25));

        analizarCodigo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        analizarCodigo.setText("Analizar codigo");
        analizarCodigo.setAlignmentY(0.0F);
        analizarCodigo.setFocusPainted(false);
        analizarCodigo.setFocusable(false);
        analizarCodigo.setPreferredSize(new java.awt.Dimension(180, 40));
        analizarCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analizarCodigoActionPerformed(evt);
            }
        });
        Botones.add(analizarCodigo);

        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 15, 0));

        cargarCodigo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cargarCodigo.setActionCommand("Cargar archivo");
        cargarCodigo.setAlignmentY(0.0F);
        cargarCodigo.setFocusPainted(false);
        cargarCodigo.setFocusable(false);
        cargarCodigo.setLabel("Cargar código");
        cargarCodigo.setPreferredSize(new java.awt.Dimension(150, 40));
        cargarCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarCodigoActionPerformed(evt);
            }
        });
        jPanel2.add(cargarCodigo);

        Botones.add(jPanel2);

        ApartadoCodigo.add(Botones);

        Datos.add(ApartadoCodigo);

        ApartadoErrores.setBackground(new java.awt.Color(204, 255, 204));
        ApartadoErrores.setLayout(new java.awt.BorderLayout());

        jPanel6.setLayout(new java.awt.GridLayout(1, 0));

        errorTextArea.setEditable(false);
        errorTextArea.setColumns(20);
        errorTextArea.setRows(5);
        jScrollPane1.setViewportView(errorTextArea);

        jPanel6.add(jScrollPane1);

        ApartadoErrores.add(jPanel6, java.awt.BorderLayout.CENTER);

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 0, 15));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel1.setText("Errores encontrados:");
        jPanel4.add(jLabel1);

        ApartadoErrores.add(jPanel4, java.awt.BorderLayout.PAGE_START);

        Datos.add(ApartadoErrores);

        Entrada.add(Datos, java.awt.BorderLayout.CENTER);

        resultsPanel.add(Entrada);

        Tablas.setLayout(new java.awt.BorderLayout(0, 20));

        Instrucciones2.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        Instrucciones2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Instrucciones2.setText("Lista de tokens:");
        Tablas.add(Instrucciones2, java.awt.BorderLayout.PAGE_START);

        Datos1.setLayout(new java.awt.GridLayout(2, 0, 0, 20));

        ListaTokens.setLayout(new javax.swing.BoxLayout(ListaTokens, javax.swing.BoxLayout.Y_AXIS));

        Codigo1.setLayout(new java.awt.GridLayout(1, 0));

        tokenTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tokenTable.setEnabled(false);
        jScrollPane3.setViewportView(tokenTable);

        Codigo1.add(jScrollPane3);

        ListaTokens.add(Codigo1);

        Datos1.add(ListaTokens);

        Simbolos.setLayout(new java.awt.BorderLayout());

        jPanel7.setLayout(new java.awt.GridLayout(1, 0));

        simbolTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        simbolTable.setEnabled(false);
        jScrollPane2.setViewportView(simbolTable);

        jPanel7.add(jScrollPane2);

        Simbolos.add(jPanel7, java.awt.BorderLayout.CENTER);

        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 0, 15));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel2.setText("Tabla de símbolos:");
        jPanel5.add(jLabel2);

        Simbolos.add(jPanel5, java.awt.BorderLayout.PAGE_START);

        Datos1.add(Simbolos);

        Tablas.add(Datos1, java.awt.BorderLayout.CENTER);

        resultsPanel.add(Tablas);

        mainPanel.add(resultsPanel);

        mainScroll.setViewportView(mainPanel);
        mainPanel.setBorder(new javax.swing.border.EmptyBorder(30, 50, 50, 50));

        getContentPane().add(mainScroll);
        mainScroll.getVerticalScrollBar().setUnitIncrement(16);

        appBarMenu.setText("Menú");
        appBarMenu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        appBarMenu.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        jmSalir.setText("Salir");
        jmSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmSalirActionPerformed(evt);
            }
        });
        appBarMenu.add(jmSalir);

        menuBar.add(appBarMenu);

        appBarInfo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        appBarInfo.setLabel("Acerca de");

        jmInfoGeneral.setText("Información general");
        jmInfoGeneral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmInfoGeneralActionPerformed(evt);
            }
        });
        appBarInfo.add(jmInfoGeneral);
        appBarInfo.add(jmSep);

        jmInfoStud.setText("Información del estudiante");
        jmInfoStud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmInfoStudActionPerformed(evt);
            }
        });
        appBarInfo.add(jmInfoStud);

        menuBar.add(appBarInfo);

        setJMenuBar(menuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cargarCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarCodigoActionPerformed
        // TODO add your handling code here:
        JFileChooser fChooser = new JFileChooser(FileSystemView.getFileSystemView().getDefaultDirectory());
        fChooser.setAcceptAllFileFilterUsed(false);
        fChooser.setDialogTitle("Select a .nb file");
        FileNameExtensionFilter restrict = new FileNameExtensionFilter("Only .nb files","nb", "nvb");
        fChooser.addChoosableFileFilter(restrict);

        if (fChooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            File code = fChooser.getSelectedFile().getAbsoluteFile();
            String str;
            try (BufferedReader reader = new BufferedReader(new FileReader(code))) {
                while ((str = reader.readLine()) != null) {
                    codeTextArea.append(str + "\n");
                }
                //poner el text area en la posicion 0.
                codeTextArea.setCaretPosition(0);
            } catch (IOException ignored) {}
        }
    }//GEN-LAST:event_cargarCodigoActionPerformed

    private void analizarCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analizarCodigoActionPerformed
        // TODO add your handling code here:
        clearResults();
        String code = codeTextArea.getText();

        if(code.isEmpty()){
            JOptionPane.showMessageDialog(this, "Por favor ingresa tu código.", "ALERTA",
            JOptionPane.WARNING_MESSAGE);
            return;
        }

        final ALexico.ResALexico response = ALexico.getInstance().realizarAnalisis(code);
        final List<Token> tokens = response.getTokens();
        final List<Token> errors = response.getErrors();
        //contadores.
        final Map<Categoria, Integer> conteo = new HashMap<>();
        //tabla simbolos.
        final Map<String, List<Integer>> ocurrencias = new LinkedHashMap<>();

        //tokens.
        tokens.forEach(x ->{
            String tokenName = x.getTokenName();
            Categoria cat = x.getCategoria();
            int line = x.getLine();

            //tabla de simbolos.
            if(cat == Categoria.IDENTIFICADOR){
                 if(!ocurrencias.containsKey(tokenName)){
                    ocurrencias.put(tokenName, new ArrayList<>(Collections.singletonList(line)));
                }else{
                    ocurrencias.get(tokenName).add(line);
                }
            }
            //lista de tokens.
            conteo.merge(cat, 1, Integer::sum);
            String[] row = {tokenName, cat.getCode(), String.format("%s-%02d", cat.getCode(), conteo.get(cat))};
            modelTokens.addRow(row);
        });

        //errors
        errors.forEach(x ->{
            String errorName = x.getTokenName();
            Categoria cat = x.getCategoria();
            int linea = x.getLine();
            errorTextArea.append("ERROR: "+cat.getCode()+", \""+errorName+"\" Linea:"+linea+"\n");
        });

        //simbolos
        ocurrencias.forEach((token,lista)->{
            String rol = token.startsWith("?") ? "Función" : "Variable";
            String referencias = lista.stream().map(Objects::toString).collect(Collectors.joining(","));
            String[] fila = {token, rol, token.length()+"", referencias};
            modelSimbols.addRow(fila);
        });

        final int err = errors.size();
        if(err == 0){
            errorTextArea.setText("NO SE DETECTARON ERRORES!");
        }else{
            JOptionPane.showMessageDialog(this, err+" errores han sido encontrados", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_analizarCodigoActionPerformed

    private void jmSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmSalirActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jmSalirActionPerformed

    private void jmInfoGeneralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmInfoGeneralActionPerformed
        // TODO add your handling code here:
        String[] cols = {"Categoría léxica", "Código"};
        String[][] rows = {
            {"Palabra clave","1A"}, 
            {"Identificador", "2A"}, 
            {"Operador aritmético",  "3A"},
            {"Operador de asignación", "3B"},
            {"Operador de igualdad y relación", "3C"},
            {"Constante literal entera", "4A"},
            {"Constante literal punto flotante", "4B"},
            {"Constante literal de caracteres", "4C"},
            {"Símbolos", "5A"},
            {"Comentarios", "6A"}
        };
        JTable table = new JTable(rows, cols);
        table.setEnabled(false);
        JOptionPane.showMessageDialog(this, new JScrollPane(table), "Categorías lexicas", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jmInfoGeneralActionPerformed

    private void jmInfoStudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmInfoStudActionPerformed
        // TODO add your handling code here:
        final Instant fecha_completacion = Instant.ofEpochMilli(1653605298313L);
        final DateTimeFormatter df = Util.getFormatter();
        
        JOptionPane.showMessageDialog(this, ""
                + "Curso: Compiladores\n"
                + "Catedrático: Hector Armando Macz Bac\n"
                + "Estudiante: Alan David González López\n"
                + "Número de carné: 4090-19-4713\n"
                + "Fecha de completación: "+df.format(fecha_completacion), "Información General", JOptionPane.INFORMATION_MESSAGE);
 
    }//GEN-LAST:event_jmInfoStudActionPerformed

    private void clearResults(){
        modelTokens.setRowCount(0);
        modelSimbols.setRowCount(0);
        errorTextArea.setText(null);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ApartadoCodigo;
    private javax.swing.JPanel ApartadoErrores;
    private javax.swing.JPanel Botones;
    private javax.swing.JPanel Codigo;
    private javax.swing.JPanel Codigo1;
    private javax.swing.JPanel Datos;
    private javax.swing.JPanel Datos1;
    private javax.swing.JPanel Entrada;
    private javax.swing.JLabel Instrucciones;
    private javax.swing.JLabel Instrucciones2;
    private javax.swing.JPanel ListaTokens;
    private javax.swing.JPanel Simbolos;
    private javax.swing.JPanel Tablas;
    private javax.swing.JButton analizarCodigo;
    private javax.swing.JMenu appBarInfo;
    private javax.swing.JMenu appBarMenu;
    private javax.swing.JButton cargarCodigo;
    private javax.swing.JTextArea codeTextArea;
    private javax.swing.JLabel course;
    private javax.swing.JTextArea errorTextArea;
    private javax.swing.JLabel iconUmg;
    private javax.swing.JPanel infoPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JMenuItem jmInfoGeneral;
    private javax.swing.JMenuItem jmInfoStud;
    private javax.swing.JMenuItem jmSalir;
    private javax.swing.JPopupMenu.Separator jmSep;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JScrollPane mainScroll;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JLabel name;
    private javax.swing.JPanel resultsPanel;
    private javax.swing.JTable simbolTable;
    private javax.swing.JPanel spacePanel;
    private javax.swing.JPanel subInfoPanel;
    private javax.swing.JPanel subInfoPanel2;
    private javax.swing.JTable tokenTable;
    // End of variables declaration//GEN-END:variables
}
